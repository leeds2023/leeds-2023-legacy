---
import type { TextWithImageStoryblok } from '@/lib/storyblok/types';
import { storyblokEditable } from '@storyblok/astro';
import { Image } from '@unpic/astro';
import TextWithCtasOrReadMore from '../ui/TextWithCtasOrReadMore.astro';
import { cn } from '@/lib/utils';

type Props = {
	blok: TextWithImageStoryblok;
};

const { blok } = Astro.props;
---

<div
	{...storyblokEditable(blok)}
	class={cn('relative flex flex-col lg:flex-row', blok.reverse && 'lg:flex-row-reverse')}
>
	<div class="relative z-[0] lg:w-1/2">
		<Image
			src={blok.image.filename}
			alt={blok.image.alt ? blok.image.alt : ''}
			height={1328}
			width={1100}
			class="w-full object-cover"
			background="auto"
		/>
		{
			blok.quote && blok.quote !== '' && (
				<blockquote
					class={cn(
						'absolute left-0 top-0 z-[3] max-w-[400px] bg-brandMint-100 p-6 lg:-bottom-6 lg:-left-10 lg:top-auto',
						blok.reverse && 'left-auto lg:-right-10',
						blok.bgColor === 'mint' && 'bg-brandRose-100'
					)}
				>
					<p class="font-display text-lg lg:text-xl">{blok.quote}</p>
				</blockquote>
			)
		}
		{
			blok.image.copyright && blok.image.copyright !== '' && (
				<figcaption class="absolute bottom-0 right-0 z-20 flex items-center justify-center bg-brandDarkGreen-100 px-4 py-2 text-[14px] text-white">
					{blok.image.copyright}
				</figcaption>
			)
		}
	</div>
	<div
		class={cn(
			'relative z-[1] flex items-center lg:-ml-14 lg:w-1/2',
			blok.reverse && 'lg:-mr-14 lg:ml-0 '
		)}
	>
		<TextWithCtasOrReadMore
			title={blok.title}
			description={blok.description}
			ctas={blok.ctas}
			truncate={blok.truncate}
			truncateChars={blok.truncateCharacters ? parseInt(blok.truncateCharacters) : undefined}
			color={blok.bgColor}
			subtitle={blok.subtitle}
			modal={blok.modalContent && blok.modalBtnText && blok.modalBtnText !== '' ? true : false}
			modalContent={blok.modalContent}
			modalBtnText={blok.modalBtnText}
		/>
	</div>
</div>
