---
import Title from '@/components/ui/Title.astro';
import RichText from '@/components/ui/RichText.astro';
import ReadMoreRichText from '@/components/react/ReadMoreRichText';
import type { CtaStoryblok, RichText as RichTextType } from '@/lib/storyblok/types';
import { renderRichText } from '@storyblok/astro';
import Button from '@/components/ui/Button.astro';
import { cn } from '@/lib/utils';
import ModalButton from '../react/ModalButton';

type Props = {
	title: string;
	subtitle?: string;
	description: RichTextType;
	truncate?: boolean;
	truncateChars?: number;
	modal: boolean;
	modalContent?: RichTextType;
	modalBtnText?: string;
	ctas?: CtaStoryblok[];
	color?: 'mint' | 'rose';
};

const {
	title,
	description,
	truncate = false,
	truncateChars = 140,
	ctas,
	subtitle,
	modalContent,
	modalBtnText,
	color = 'rose',
	modal = false,
} = Astro.props;

const renderedRichText = renderRichText(description);

console.log(modal);
---

{
	!truncate && !modal && (
		<div
			class={cn(
				' flex flex-col gap-4 bg-brandRose-100 p-8 text-center lg:text-left',
				color === 'mint' && 'bg-brandMint-100'
			)}
		>
			<div class="flex flex-col gap-2">
				<Title>{title}</Title>
				{subtitle && subtitle !== '' && (
					<Title size={'small'} type="h3">
						{subtitle}
					</Title>
				)}
			</div>
			<RichText content={description} />
			{ctas && ctas.length > 0 && (
				<div class="flex flex-col gap-6 lg:flex-row">
					{ctas.map((cta) => (
						<Button id={cta._uid} color={cta.color} sbLink={cta.link} style={cta.style}>
							{cta.text}
						</Button>
					))}
				</div>
			)}
		</div>
	)
}

{
	truncate && !modal && (
		<div
			class={cn('flex flex-col gap-4 bg-brandRose-100 p-8', color === 'mint' && 'bg-brandMint-100')}
		>
			<div class="flex flex-col gap-2">
				<Title>{title}</Title>
				{subtitle && subtitle !== '' && (
					<Title size={'small'} type="h3">
						{subtitle}
					</Title>
				)}
			</div>
			<ReadMoreRichText client:visible content={renderedRichText} truncateChars={truncateChars} />
		</div>
	)
}

{
	modal && modalContent && (
		<div
			class={cn('flex flex-col gap-4 bg-brandRose-100 p-8', color === 'mint' && 'bg-brandMint-100')}
		>
			<div class="flex flex-col gap-2">
				<Title>{title}</Title>
				{subtitle && subtitle !== '' && (
					<Title size={'small'} type="h3">
						{subtitle}
					</Title>
				)}
			</div>
			<RichText content={description} />
			<ModalButton client:visible modalContent={modalContent} modalBtnText={modalBtnText} />
		</div>
	)
}
