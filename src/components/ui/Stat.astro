---
import { storyblokEditable } from '@storyblok/astro';

import type { StatStoryblok } from '@/lib/storyblok/types';
import { Image } from '@unpic/astro';
import { extractDimensions } from '@/lib/storyblok/helpers';
import { cn } from '@/lib/utils';
import Title from './Title.astro';
import Button from './Button.astro';
type Props = {
	blok: StatStoryblok;
	isInBox?: boolean;
	isWide?: boolean;
	isLarger?: boolean;
	isShort?: boolean;
};
const { blok, isInBox = true, isWide = false, isLarger = false, isShort = false } = Astro.props;
const dimensions = blok.icon ? extractDimensions(blok.icon.filename, 2000) : null;
---

<div class="w-full" {...storyblokEditable(blok)}>
	<div
		class={cn(
			'p-8 flex flex-col gap-4 min-h-fit h-full justify-between',
			isInBox && 'border-2 border-brandMagenta-80 rounded-md',
			isWide && '',
			(isLarger || blok.isLarger) && '',
			(isShort || blok.isShort) && ''
		)}
	>
		<div class="flex items-center gap-4">
			{
				blok.icon && blok.icon && blok.icon.filename !== '' && (
					<div class="h-9">
						{dimensions ? (
							<Image
								src={blok.icon.filename}
								class="h-full object-cover"
								alt=""
								width={dimensions.width}
								height={dimensions.height}
								aria-labelledby={blok._uid}
							/>
						) : (
							<Image
								src={blok.icon.filename}
								class="h-full object-cover"
								alt=""
								layout="fullWidth"
								aria-labelledby={blok._uid}
							/>
						)}
					</div>
				)
			}
			<Title
				size={isLarger || blok.isLarger ? 'larger' : 'large'}
				className="font-semibold"
				type="span"
			>
				{blok.statValue}
			</Title>
		</div>
		<div class="flex flex-col gap-1">
			<h3>
				{blok.subtext}
			</h3>
			{
				blok.link && blok.linkText && blok.linkText !== '' && (
					<div class="w-fit">
						<Button
							sbLink={blok.link}
							className="pl-0"
							style={'ghost'}
							color={'primary'}
							id={blok._uid}
						>
							{blok.linkText}
						</Button>
					</div>
				)
			}
		</div>
	</div>
</div>
